
host_ip = ''
src_ip = []
host_port = 18246

def fuzzing_main():
    session = Session(target=Target(connection=UDPSocketConnection(host_ip, host_port)),nova_session_param=nova_session_param)
    fuzzing_EGD(session=session)
    session.fuzz()


def fuzzing_EGD(session):
    s_initialize(name="EGD")
    with s_block("EGD"):
        s_bytes(value=bytes([0x0d]),  name='Type', fuzzable=False)
        s_bytes(value=bytes([0x01]), size=1, max_len=1, name='version', fuzzable=False)
        s_bytes(value=bytes([0x01,0xe8]),size=2, max_len=2, name='requestid', fuzzable=False)
        s_bytes(value=bytes(src_ip), size=4, max_len=4, name='producerid', fuzzable=False)
        #s_bytes(value=bytes([0x02, 0x00, 0x00, 0x00]), size=4, max_len=4, name='producerid', fuzzable=False)
        s_bytes(value=bytes([0x02,0x00,0x00,0x00]), size=4, max_len=4, name='exchangeid', fuzzable=False)
        s_bytes(value=bytes([0x8b,0x6c,0xd9,0x4b,0x00,0x92,0xfe,0x1e]), size=8, max_len=8, name='timestamp', fuzzable=True)
        s_bytes(value=bytes([0x00, 0x00, 0x00, 0x00]), size=4, max_len=4, name='status', fuzzable=False)
        s_bytes(value=bytes([0x00, 0x00, 0x00, 0x00]), size=4, max_len=4, name='configsignature', fuzzable=False)
        s_bytes(value=bytes([0x00, 0x00, 0x00, 0x00]), size=4, max_len=4, name='reserved', fuzzable=True)
        s_bytes(value=bytes([0x00, 0x00, 0x00, 0x00,0x00, 0x00, 0x00, 0x00,0x00, 0x00, 0x00, 0x00,0x00, 0x00, 0x00, 0x00,0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00,0x00, 0x00, 0x00, 0x00,0x00, 0x00, 0x00, 0x00,0x00, 0x00, 0x00, 0x00,0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00,0x00, 0x00, 0x00, 0x00,0x00, 0x00, 0x00, 0x00,0x00, 0x00, 0x00, 0x00,0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00,0x00, 0x00, 0x00, 0x00,0x00, 0x00, 0x00, 0x00,0x00, 0x00, 0x00, 0x00,0x00, 0x00, 0x00, 0x00]), size=80, max_len=80, name='data', fuzzable=True)

    session.connect(s_get('EGD'))
if __name__ == "__main__":
    fuzzing_main()