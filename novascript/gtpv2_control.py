
host_ip = ''
host_port = 2123


def fuzzing_main():
    session = Session(target=Target(connection=UDPSocketConnection(host_ip, host_port)),nova_session_param=nova_session_param)

    fuzzing_define_proto(session=session)

    session.fuzz()


def fuzzing_define_proto(session):
    s_initialize(name="Create_Session_request")
    with s_block("GPRS"):
        s_bytes(value=bytes([0x48]), size=1, max_len=1, name='Flags', fuzzable=False)
        s_bytes(value=bytes([0x20]), size=1, max_len=1, name='message_type', fuzzable=False)
        s_bytes(value=bytes([0x00, 0xc4]), size=2, max_len=2, name='message_length', fuzzable=False)
        s_bytes(value=bytes([0x00, 0x00, 0x00, 0x00]), size=4, max_len=4, name='TEID', fuzzable=False)
        s_bytes(value=bytes([0x00,0x00,0x01]), size=3, max_len=3, name='Sequence_number', fuzzable=False)
        s_bytes(value=bytes([0x00]), size=1, max_len=1, name='Spare', fuzzable=False)
        s_bytes(value=bytes([0x01]), size=1, max_len=1, name='IE_Type', fuzzable=False)
        s_bytes(value=bytes([0x00,0x08]), size=2, max_len=2, name='IE_Length', fuzzable=False)
        s_bytes(value=bytes([0x00]), size=1, max_len=1, name='CR_flag', fuzzable=False)
        s_bytes(value=bytes([0x40,0x25,0x20,0x02,0x00,0x00,0x00,0xf0]), size=8, max_len=8, name='IMSI', fuzzable=False)
        s_bytes(value=bytes([0x4c]), size=1, max_len=1, name='MSISDN_IE_Type', fuzzable=False)
        s_bytes(value=bytes([0x00, 0x08]), size=2, max_len=2, name='MSISDN_IE_Length', fuzzable=False)
        s_bytes(value=bytes([0x00]), size=1, max_len=1, name='CR_flag1', fuzzable=False)
        s_bytes(value=bytes([0x38,0x19,0x22,0x00,0x20,0x01,0x00,0xf0]), size=8, max_len=8, name='E.164', fuzzable=False)
        s_bytes(value=bytes([0x4b]), size=1, max_len=1, name='MEI_IE_Type', fuzzable=False)
        s_bytes(value=bytes([0x00, 0x08]), size=2, max_len=2, name='MEI_IE_Length', fuzzable=False)
        s_bytes(value=bytes([0x00]), size=1, max_len=1, name='MEI_CR_flag', fuzzable=False)
        s_bytes(value=bytes([0x03,0x59,0x11,0x60,0x00,0x00,0x00,0x00]), size=8, max_len=8, name='MEI', fuzzable=False)
        s_bytes(value=bytes([0x56]), size=1, max_len=1, name='ULI_IE_Type', fuzzable=False)
        s_bytes(value=bytes([0x00, 0x0d]), size=2, max_len=2, name='ULI_IE_Length', fuzzable=False)
        s_bytes(value=bytes([0x00]), size=1, max_len=1, name='ULI_CR_flag', fuzzable=False)
        s_bytes(value=bytes([0x18]), size=1, max_len=1, name='ULI_flag', fuzzable=False)
        s_bytes(value=bytes([0x62,0xf2,0x20]), size=3, max_len=3, name='TAI_HARDER', fuzzable=False)
        s_bytes(value=bytes([0x00,0x00]), size=2, max_len=2, name='TAC', fuzzable=False)
        s_bytes(value=bytes([0x62, 0xf2, 0x20]), size=3, max_len=3, name='ECGI', fuzzable=False)
        s_bytes(value=bytes([0x00]), size=1, max_len=1, name='ECGI_sqpare', fuzzable=False)
        s_bytes(value=bytes([0x00,0x00,0x00,0x01]), size=1, max_len=1, name='ECGI_ECI', fuzzable=False)
        s_bytes(value=bytes([0x53]), size=1, max_len=1, name='Service_network_IE_Type', fuzzable=False)
        s_bytes(value=bytes([0x00, 0x03]), size=2, max_len=2, name='Service_network_IE_Length', fuzzable=False)
        s_bytes(value=bytes([0x00]), size=1, max_len=1, name='Service_network_CR_flag', fuzzable=False)
        s_bytes(value=bytes([0x62, 0xf2, 0x20]), size=3, max_len=3, name='MCC', fuzzable=False)
        s_bytes(value=bytes([0x52]), size=1, max_len=1, name='RAT_IE_Type', fuzzable=False)
        s_bytes(value=bytes([0x00, 0x01]), size=2, max_len=2, name='RAT_IE_Length', fuzzable=False)
        s_bytes(value=bytes([0x00]), size=1, max_len=1, name='RAT_CR_flag', fuzzable=False)
        s_bytes(value=bytes([0x06]), size=1, max_len=1, name='RAT_Type', fuzzable=False)
        s_bytes(value=bytes([0x4d]), size=1, max_len=1, name='Indication_IE_Type', fuzzable=False)
        s_bytes(value=bytes([0x00, 0x02]), size=2, max_len=2, name='Indication_IE_Length', fuzzable=False)
        s_bytes(value=bytes([0x00]), size=1, max_len=1, name='Indication_CR_flag', fuzzable=False)
        s_bytes(value=bytes([0x00]), size=1, max_len=1, name='Indication_DAF_flag', fuzzable=False)
        s_bytes(value=bytes([0x00]), size=1, max_len=1, name='Indication_SQCI_flag', fuzzable=False)
        s_bytes(value=bytes([0x57]), size=1, max_len=1, name='F-TEID_IE_Type', fuzzable=False)
        s_bytes(value=bytes([0x00, 0x09]), size=2, max_len=2, name='F-TEID_Length', fuzzable=False)
        s_bytes(value=bytes([0x00]), size=1, max_len=1, name='F-TEID_CR_flag', fuzzable=False)
        s_bytes(value=bytes([0x86]), size=1, max_len=1, name='F-TEID_v4', fuzzable=False)
        s_bytes(value=bytes([0x00,0X00,0x00,0x01]), size=4, max_len=4, name='F-TEID_KEY', fuzzable=False)
        s_bytes(value=bytes([0x11,0x01,0x02,0x02]), size=4, max_len=4, name='F-TEID_IPv4', fuzzable=False)
        s_bytes(value=bytes([0x47]), size=1, max_len=1, name='APN_IE_Type', fuzzable=False)
        s_bytes(value=bytes([0x00, 0x10]), size=2, max_len=2, name='APN_Length1', fuzzable=False)
        s_bytes(value=bytes([0x00]), size=1, max_len=1, name='APN_CR_flag', fuzzable=False)
        s_bytes(value=bytes([0x03,0x77,0x65,0x62,0x06,0x6d,0x63,0x63,0x36,0x32,0x04,0x67,
                             0x70,0x72,0x73]), size=16, max_len=16, name='APN', fuzzable=False)
        s_bytes(value=bytes([0x80]), size=1, max_len=1, name='SM_IE_Type', fuzzable=False)
        s_bytes(value=bytes([0x00, 0x01]), size=2, max_len=2, name='SM_Length', fuzzable=False)
        s_bytes(value=bytes([0x00]), size=1, max_len=1, name='SM_CR_flag', fuzzable=False)
        s_bytes(value=bytes([0x63]), size=1, max_len=1, name='PDN_IE_Type', fuzzable=False)
        s_bytes(value=bytes([0x00, 0x01]), size=2, max_len=2, name='PDN_Length', fuzzable=False)
        s_bytes(value=bytes([0x00]), size=1, max_len=1, name='PDN_CR_flag', fuzzable=False)
        s_bytes(value=bytes([0x01]), size=1, max_len=1, name='PDN_Type', fuzzable=False)
        s_bytes(value=bytes([0x4f]), size=1, max_len=1, name='PAA_IE_Type', fuzzable=False)
        s_bytes(value=bytes([0x00, 0x05]), size=2, max_len=2, name='PAA_Length', fuzzable=False)
        s_bytes(value=bytes([0x00]), size=1, max_len=1, name='PAA_CR_flag', fuzzable=False)
        s_bytes(value=bytes([0x01]), size=1, max_len=1, name='PAA_Type', fuzzable=False)
        s_bytes(value=bytes([0x00,0x00,0x00,0x00]), size=4, max_len=4, name='PDN_address', fuzzable=True)
        s_bytes(value=bytes([0x7f]), size=1, max_len=1, name='APN_IE_Type1', fuzzable=False)
        s_bytes(value=bytes([0x00,0x01]), size=2, max_len=2, name='APN_Length2', fuzzable=False)
        s_bytes(value=bytes([0x00]), size=1, max_len=1, name='APN_CR_flag1', fuzzable=False)
        s_bytes(value=bytes([0x00]), size=1, max_len=1, name='APNR', fuzzable=False)
        s_bytes(value=bytes([0x4f]), size=1, max_len=1, name='AMBR_IE_Type', fuzzable=False)
        s_bytes(value=bytes([0x00, 0x05]), size=2, max_len=2, name='AMBR_Length', fuzzable=False)
        s_bytes(value=bytes([0x00]), size=1, max_len=1, name='AMBR_CR_flag', fuzzable=False)
        s_bytes(value=bytes([0x00, 0x00, 0x00, 0x00]), size=4, max_len=4, name='AMBR_Uplink', fuzzable=False)
        s_bytes(value=bytes([0x00, 0x00, 0x00, 0x00]), size=4, max_len=4, name='AMBR_Downlink', fuzzable=False)
        s_bytes(value=bytes([0x5d]), size=1, max_len=1, name='BC_IE_Type', fuzzable=False)
        s_bytes(value=bytes([0x00, 0x2c]), size=2, max_len=2, name='BC_Length', fuzzable=False)
        s_bytes(value=bytes([0x00]), size=1, max_len=1, name='BC_CR_flag', fuzzable=False)
        s_bytes(value=bytes([0x49]), size=1, max_len=1, name='EBI_IE_Type', fuzzable=False)
        s_bytes(value=bytes([0x00, 0x2c]), size=2, max_len=2, name='EBI_Length', fuzzable=False)
        s_bytes(value=bytes([0x00]), size=1, max_len=1, name='EBI_CR_flag', fuzzable=False)
        s_bytes(value=bytes([0x05]), size=1, max_len=1, name='EBI_spare_bit', fuzzable=False)
        s_bytes(value=bytes([0x57]), size=1, max_len=1, name='F-TEID_IE_Type1', fuzzable=False)
        s_bytes(value=bytes([0x00, 0x09]), size=2, max_len=2, name='F-TEID_Length1', fuzzable=False)
        s_bytes(value=bytes([0x00]), size=1, max_len=1, name='F-TEID_CR_flag1', fuzzable=False)
        s_bytes(value=bytes([0x86]), size=1, max_len=1, name='F-TEID_v4_1', fuzzable=False)
        s_bytes(value=bytes([0x00, 0X00, 0x03, 0xe8]), size=4, max_len=4, name='F-TEID_KEY1', fuzzable=True)
        s_bytes(value=bytes([0x11, 0x01, 0x02, 0x02]), size=4, max_len=4, name='F-TEID_IPv4_1', fuzzable=True)
        s_bytes(value=bytes([0x50]), size=1, max_len=1, name='BLQoS_IE_Type', fuzzable=False)
        s_bytes(value=bytes([0x00, 0x16]), size=2, max_len=2, name='BLQoS_Length', fuzzable=False)
        s_bytes(value=bytes([0x00]), size=1, max_len=1, name='BLQoS_CR_flag', fuzzable=False)
        s_bytes(value=bytes([0x04]), size=1, max_len=1, name='BLQoS_IE_Type1', fuzzable=False)
        s_bytes(value=bytes([0x00]), size=1, max_len=1, name='BLQoS_label', fuzzable=False)
        s_bytes(value=bytes([0x00,0x00,0x10,0x00]), size=4, max_len=4, name='MBRFU', fuzzable=False)
        s_bytes(value=bytes([0x00, 0x00, 0x10, 0x00]), size=4, max_len=4, name='MBRFD', fuzzable=True)
        s_bytes(value=bytes([0x00, 0x00, 0x10, 0x00]), size=4, max_len=4, name='GBRFU', fuzzable=True)
        s_bytes(value=bytes([0x00, 0x00, 0x10, 0x00]), size=4, max_len=4, name='GBRFD', fuzzable=True)

    s_initialize(name="Delete_Session_request")
    with s_block("GPRS"):
        s_bytes(value=bytes([0x48]), size=1, max_len=1, name='Flags', fuzzable=False)
        s_bytes(value=bytes([0x24]), size=1, max_len=1, name='message_type', fuzzable=False)
        s_bytes(value=bytes([0x00, 0x0d]), size=2, max_len=2, name='length', fuzzable=True)
        s_bytes(value=bytes([0x00, 0x0f, 0x42, 0x40]), size=4, max_len=4, name='TEID', fuzzable=True)
        s_bytes(value=bytes([0x00, 0x00,0x02]), size=3, max_len=3, name='Sequence_number', fuzzable=True)
        s_bytes(value=bytes([0x00]), size=1, max_len=1, name='sqare', fuzzable=False)
        s_bytes(value=bytes([0x14, 0x05, 0x00, 0x00]), size=4, max_len=4, name='NSAPI', fuzzable=True)
        s_bytes(value=bytes([0x49]), size=1, max_len=1, name='EBI_IE_Type', fuzzable=False)
        s_bytes(value=bytes([0x00, 0x01]), size=2, max_len=2, name='EBI_Length', fuzzable=True)
        s_bytes(value=bytes([0x00]),size=1, max_len=1, name='EBI_CR_flag', fuzzable=False)
        s_bytes(value=bytes([0x05,0x00]), size=2, max_len=2, name='SQARE_bit', fuzzable=True)




        session.connect(s_get('Create_Session_request'))
        session.connect(s_get('Delete_Session_request'))




if __name__ == "__main__":
    fuzzing_main()