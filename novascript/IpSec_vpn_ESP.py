interface_port = ''
src_ip = []
dst_ip = []


def fuzzing_main():
    session = Session(target=Target(connection=RawL3SocketConnection(interface=interface_port, ethernet_proto=0x0800)),nova_session_param=nova_session_param )
    fuzzing_define_proto(session=session)
    session.fuzz()


def fuzzing_define_proto(session):
    s_initialize(name="IPv4")
    with s_block("IPv4"):
        s_bytes(value=bytes([0x45]), size=1, max_len=1,name='Version', fuzzable=False)
        s_bytes(value=bytes([0x00]), size=1, max_len=1,  name='DSF', fuzzable=False)
        s_bytes(value=bytes([0x00, 0x7c]), size=1, max_len=1, name='Total Length', fuzzable=False)
        s_bytes(value=bytes([0x00, 0x02]), size=1, max_len=1,  name='Identification', fuzzable=False)
        s_bytes(value=bytes([0x40, 0x00]), size=1, max_len=1,   name='Flags', fuzzable=False)
        s_bytes(value=bytes([0xff]),size=1, max_len=1, name='Time to Live', fuzzable=False)
        s_bytes(value=bytes([0x32]),size=1, max_len=1,name='Protocol', fuzzable=False)
        s_checksum("IPv4", algorithm='ipv4', name='Checksum', endian='>', length=2, fuzzable=False)
        s_bytes(value=bytes(src_ip), size=4, max_len=4, name='Source Address', fuzzable=False)
        s_bytes(value=bytes(dst_ip), size=4, max_len=4,name='Destination Address', fuzzable=False)
    with s_block("ESP"):
        s_bytes(value=bytes([0x0b, 0x84, 0x54, 0xca]), size=4, max_len=4, name='esp.spi', fuzzable=False)
        s_bytes(value=bytes([0x00, 0x00, 0x00, 0x02]), size=4, max_len=4, name='sep.sequence', fuzzable=True)
        s_bytes(value=bytes([0x67,0x45,0x8b,0x6b,0x00,0x00,0x00,0x00,0xc6,0x23,0x7b,0x32,0x00,0x00,0x00,0x00,0x4b,0x03,0xff,0x61,0xa9,0xc9,0xb0,0x40,0xe9,0x5a,0xa3,0xb2,0xfa,0xec,0x3a,0xaf,0x62,0x7b,0xe4,0xa6,0x69,0x93,0x3b,0xd7,0x33,0x6e,0x34,0x59,0x6f,0x10,0x83,0x27,0x19,0x54,0xcc,0x00,0x3b,0x0b,0x9a,0xfe,0x86,0xcf,0xae,0x9c,0xaf,0x37,0x17,0xc2,0x4d,0x8e,0x46,0xed,0x9a,0x9b,0x74,0x66,0xe4,0xa8,0xa0,0x74,0x11,0x67,0x03,0x99,0xb6,0x5d,0x5d,0x7c,0xca,0x15,0x91,0x4f,0x04,0x97,0x43,0xcc,0x31,0x5f,0xe2,0x59]), size=96, max_len=96, name='data', fuzzable=True)
    session.connect(s_get('IPv4'))


if __name__ == "__main__":
    fuzzing_main()